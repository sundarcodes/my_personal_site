<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lambda on Sundar</title>
    <link>/tags/lambda/</link>
    <description>Recent content in Lambda on Sundar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Jul 2022 12:41:05 -0500</lastBuildDate><atom:link href="/tags/lambda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tuition Management App</title>
      <link>/projects/creations/tutora/</link>
      <pubDate>Mon, 11 Jul 2022 12:41:05 -0500</pubDate>
      
      <guid>/projects/creations/tutora/</guid>
      <description>This is about developing a mobile app for small scale/home based tutors. The app is primarily targetted to reduce the administation hassles of managing/running a online/physical classes. The backend is cloud native and frontend is built using React Native.
Tech Stack Frontend React Native as UI framework Mobx for state management GraphQL/REST clients for CRUD Backend AWS Serverless for business logic AWS API Gateway for routing AWS Cognito for authentication AWS S3 for storage AWS Event Bridge for integrations with third party apps DataStore Mongo DB Atlas for storing application data Mongo Realm as the persistence layer interface exposing GraphQL server Integrations Twilio for SMS and Email Programming Languages TypeScript JavaScript </description>
    </item>
    
    <item>
      <title>Handwritten Data Recognition</title>
      <link>/projects/creations/form_reader/</link>
      <pubDate>Thu, 11 Jun 2020 12:41:05 -0500</pubDate>
      
      <guid>/projects/creations/form_reader/</guid>
      <description>This was about creating an OCR solution to understand and read hand written information from application forms. This involved using deep learning algorithms for image classification, object detection and character recognition. The entire ML life cycle of gathering data, annotating the data, training the models on different deep learning algorithms was followed and finally the solution was deployed on Cloud.
Tech Stack Frontend Angular as UI framework REST APIs for CRUD Backend NestJS as backend for UI Flask for ML API AWS S3 for storage AWS EC2 for app container AWS lamda for micro services AWS Auto Scaling for scaling AWS DynamoDB for persistence Tensorflow for deep learning Yolo and Faster RCNN for object detection Inception for image classification DataStore Postgres Programming Languages TypeScript Python </description>
    </item>
    
  </channel>
</rss>
