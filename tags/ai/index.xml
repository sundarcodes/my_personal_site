<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI on Sundar</title>
    <link>/tags/ai/</link>
    <description>Recent content in AI on Sundar</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Aug 2020 12:41:05 -0500</lastBuildDate>
    <atom:link href="/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A no/low code developer platform for building ML &amp; RPA solutions</title>
      <link>/projects/creations/nocode_platform/</link>
      <pubDate>Tue, 11 Aug 2020 12:41:05 -0500</pubDate>
      <guid>/projects/creations/nocode_platform/</guid>
      <description>This low code platform&amp;rsquo;s objective is to ease the lives of ML and RPA developers by providing a visual drag and drop interface to build solutions for ML and RPA needs. Architected the entire platform right from ground up.&#xA;Tech Stack Frontend React as UI library Redux for state management REST APIs for CRUD Electron for desktop application Backend NestJS for business logic ML microservices NodeRed for low-code development DataStore MongoDB Integrations MLFlow for machine learning lifecycle Programming Languages TypeScript JavaScript Python </description>
    </item>
    <item>
      <title>Handwritten Data Recognition</title>
      <link>/projects/creations/form_reader/</link>
      <pubDate>Thu, 11 Jun 2020 12:41:05 -0500</pubDate>
      <guid>/projects/creations/form_reader/</guid>
      <description>This was about creating an OCR solution to understand and read hand written information from application forms. This involved using deep learning algorithms for image classification, object detection and character recognition. The entire ML life cycle of gathering data, annotating the data, training the models on different deep learning algorithms was followed and finally the solution was deployed on Cloud.&#xA;Tech Stack Frontend Angular as UI framework REST APIs for CRUD Backend NestJS as backend for UI Flask for ML API AWS S3 for storage AWS EC2 for app container AWS lamda for micro services AWS Auto Scaling for scaling AWS DynamoDB for persistence Tensorflow for deep learning Yolo and Faster RCNN for object detection Inception for image classification DataStore Postgres Programming Languages TypeScript Python Architecture </description>
    </item>
    <item>
      <title>Scanned Cheque OCR</title>
      <link>/projects/creations/cheque_ocr/</link>
      <pubDate>Sun, 11 Aug 2019 12:41:05 -0500</pubDate>
      <guid>/projects/creations/cheque_ocr/</guid>
      <description>As the traditional computer vision solutions were not able to recognize all the printed characters in a scanned cheque, this solution based on deep learning provided an acceptable level of results - More than 80% as opposed the traditional open cv based approach which yielded 60%. This involved annotating and training close to 10000 cheques.I was instrumental in designing and developing the entire solution.&#xA;Tech Stack Backend Flask for ML API Docker Yolo and Faster RCNN for object detection Inception for image classification Tesseract for OCR Tensorflow as the deep learning framework Programming Languages and libraries Python OpenCV </description>
    </item>
  </channel>
</rss>
