<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TypeScript on Sundar</title>
    <link>/tags/typescript/</link>
    <description>Recent content in TypeScript on Sundar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Aug 2020 12:41:05 -0500</lastBuildDate><atom:link href="/tags/typescript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A no/low code developer platform for building ML &amp; RPA solutions</title>
      <link>/projects/creations/nocode_platform/</link>
      <pubDate>Tue, 11 Aug 2020 12:41:05 -0500</pubDate>
      
      <guid>/projects/creations/nocode_platform/</guid>
      <description>This low code platform&amp;rsquo;s objective is to ease the lives of ML and RPA developers by providing a visual drag and drop interface to build solutions for ML and RPA needs. Architected the entire platform right from ground up.
Tech Stack Frontend  React as UI library Redux for state management REST APIs for CRUD Electron for desktop application  Backend  NestJS for business logic ML microservices NodeRed for low-code development  DataStore  MongoDB  Integrations  MLFlow for machine learning lifecycle  Programming Languages  TypeScript JavaScript Python  </description>
    </item>
    
    <item>
      <title>Search Engine for Discord</title>
      <link>/projects/creations/discord_search_engine/</link>
      <pubDate>Tue, 11 Aug 2020 12:41:05 -0500</pubDate>
      
      <guid>/projects/creations/discord_search_engine/</guid>
      <description>This is about building an aggregated search engine for Discord servers. Users could see and search on what people are talking publicly on popular discord servers. The current version of app is targeted to be used by people interested in fin tech and crypto news.
Tech Stack Frontend  React, Mithriljs Mobx for state management REST clients for CRUD  Backend  Feathersjs for REST APIs NodeJS app for data collection/scraping Bullmq for queueing  DataStore  Redis as in-memory data store Firestore for persistent data storage  Programming Languages  TypeScript JavaScript  </description>
    </item>
    
    <item>
      <title>Tuition Management App</title>
      <link>/projects/creations/tutora/</link>
      <pubDate>Tue, 11 Aug 2020 12:41:05 -0500</pubDate>
      
      <guid>/projects/creations/tutora/</guid>
      <description>This is about developing a mobile app for small scale/home based tutors. The app is primarily targetted to reduce the administation hassles of managing/running a online/physical classes. The backend is cloud native and frontend is built using React Native.
Tech Stack Frontend  React Native as UI framework Mobx for state management GraphQL/REST clients for CRUD  Backend  AWS Serverless for business logic AWS API Gateway for routing AWS Cognito for authentication AWS S3 for storage AWS Event Bridge for integrations with third party apps  DataStore  Mongo DB Atlas for storing application data Mongo Realm as the persistence layer interface exposing GraphQL server  Integrations  Twilio for SMS and Email  Programming Languages  TypeScript JavaScript  </description>
    </item>
    
  </channel>
</rss>
